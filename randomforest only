{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d9e3ebe1",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:30.861669Z",
     "iopub.status.busy": "2025-01-28T16:14:30.861171Z",
     "iopub.status.idle": "2025-01-28T16:14:34.319387Z",
     "shell.execute_reply": "2025-01-28T16:14:34.318093Z"
    },
    "papermill": {
     "duration": 3.466479,
     "end_time": "2025-01-28T16:14:34.321835",
     "exception": false,
     "start_time": "2025-01-28T16:14:30.855356",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score, roc_auc_score, classification_report, roc_curve, auc\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ee0136d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:34.331078Z",
     "iopub.status.busy": "2025-01-28T16:14:34.330306Z",
     "iopub.status.idle": "2025-01-28T16:14:34.441351Z",
     "shell.execute_reply": "2025-01-28T16:14:34.440026Z"
    },
    "papermill": {
     "duration": 0.118188,
     "end_time": "2025-01-28T16:14:34.444056",
     "exception": false,
     "start_time": "2025-01-28T16:14:34.325868",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>KRFP17</th>\n",
       "      <th>KRFP1146</th>\n",
       "      <th>KRFP1157</th>\n",
       "      <th>KRFP2667</th>\n",
       "      <th>KRFP2986</th>\n",
       "      <th>KRFP3058</th>\n",
       "      <th>KRFP3180</th>\n",
       "      <th>KRFP3360</th>\n",
       "      <th>KRFP3395</th>\n",
       "      <th>...</th>\n",
       "      <th>BCUT2D_CHGHI_1.0</th>\n",
       "      <th>BCUT2D_CHGLO_1.0</th>\n",
       "      <th>BCUT2D_MRHI_2.0</th>\n",
       "      <th>Chi4n_0</th>\n",
       "      <th>PEOE_VSA6_0</th>\n",
       "      <th>SlogP_VSA11_0</th>\n",
       "      <th>RingCount_0</th>\n",
       "      <th>fr_NH0_0</th>\n",
       "      <th>fr_aniline_0</th>\n",
       "      <th>fr_aryl_methyl_0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1812</th>\n",
       "      <td>1812</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1813</th>\n",
       "      <td>1813</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1814</th>\n",
       "      <td>1814</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1815</th>\n",
       "      <td>1815</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816</th>\n",
       "      <td>1816</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1817 rows × 212 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0  KRFP17  KRFP1146  KRFP1157  KRFP2667  KRFP2986  KRFP3058  \\\n",
       "0              0       1         0         1         1         1         1   \n",
       "1              1       1         1         1         1         1         1   \n",
       "2              2       1         0         1         1         1         1   \n",
       "3              3       0         0         0         0         1         0   \n",
       "4              4       0         0         0         0         1         0   \n",
       "...          ...     ...       ...       ...       ...       ...       ...   \n",
       "1812        1812       0         0         0         0         1         1   \n",
       "1813        1813       0         0         0         0         1         1   \n",
       "1814        1814       0         0         0         0         0         0   \n",
       "1815        1815       0         1         0         0         0         0   \n",
       "1816        1816       1         0         1         0         1         1   \n",
       "\n",
       "      KRFP3180  KRFP3360  KRFP3395  ...  BCUT2D_CHGHI_1.0  BCUT2D_CHGLO_1.0  \\\n",
       "0            0         1         1  ...                 1                 0   \n",
       "1            0         1         1  ...                 1                 0   \n",
       "2            0         1         1  ...                 1                 0   \n",
       "3            0         0         0  ...                 1                 1   \n",
       "4            0         0         0  ...                 1                 1   \n",
       "...        ...       ...       ...  ...               ...               ...   \n",
       "1812         0         0         0  ...                 1                 0   \n",
       "1813         0         0         0  ...                 1                 0   \n",
       "1814         0         0         0  ...                 0                 0   \n",
       "1815         1         0         0  ...                 1                 0   \n",
       "1816         0         1         1  ...                 1                 0   \n",
       "\n",
       "      BCUT2D_MRHI_2.0  Chi4n_0  PEOE_VSA6_0  SlogP_VSA11_0  RingCount_0  \\\n",
       "0                   0        0            0              0            0   \n",
       "1                   0        0            0              0            0   \n",
       "2                   0        0            0              0            0   \n",
       "3                   0        1            1              1            1   \n",
       "4                   0        1            0              1            1   \n",
       "...               ...      ...          ...            ...          ...   \n",
       "1812                0        1            1              1            0   \n",
       "1813                0        1            1              1            0   \n",
       "1814                1        1            1              1            1   \n",
       "1815                0        1            1              1            1   \n",
       "1816                0        0            0              1            0   \n",
       "\n",
       "      fr_NH0_0  fr_aniline_0  fr_aryl_methyl_0  \n",
       "0            1             1                 1  \n",
       "1            1             1                 1  \n",
       "2            1             1                 1  \n",
       "3            1             1                 1  \n",
       "4            1             1                 1  \n",
       "...        ...           ...               ...  \n",
       "1812         1             1                 1  \n",
       "1813         1             1                 1  \n",
       "1814         0             1                 1  \n",
       "1815         1             0                 1  \n",
       "1816         1             1                 1  \n",
       "\n",
       "[1817 rows x 212 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv('/kaggle/input/new-data/combined_dataset_fs_2.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5f225968",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:34.453746Z",
     "iopub.status.busy": "2025-01-28T16:14:34.453274Z",
     "iopub.status.idle": "2025-01-28T16:14:34.465497Z",
     "shell.execute_reply": "2025-01-28T16:14:34.464543Z"
    },
    "papermill": {
     "duration": 0.019273,
     "end_time": "2025-01-28T16:14:34.467484",
     "exception": false,
     "start_time": "2025-01-28T16:14:34.448211",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = df.drop([\"bioactivity_class\"], axis=1)\n",
    "Y = df.bioactivity_class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "92941d47",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:34.476613Z",
     "iopub.status.busy": "2025-01-28T16:14:34.476129Z",
     "iopub.status.idle": "2025-01-28T16:14:34.486723Z",
     "shell.execute_reply": "2025-01-28T16:14:34.485469Z"
    },
    "papermill": {
     "duration": 0.017427,
     "end_time": "2025-01-28T16:14:34.488900",
     "exception": false,
     "start_time": "2025-01-28T16:14:34.471473",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b5fda8c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:34.498224Z",
     "iopub.status.busy": "2025-01-28T16:14:34.497742Z",
     "iopub.status.idle": "2025-01-28T16:14:34.502796Z",
     "shell.execute_reply": "2025-01-28T16:14:34.501524Z"
    },
    "papermill": {
     "duration": 0.011857,
     "end_time": "2025-01-28T16:14:34.504745",
     "exception": false,
     "start_time": "2025-01-28T16:14:34.492888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "rf = RandomForestClassifier(n_estimators=100, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6f2da27b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:34.514185Z",
     "iopub.status.busy": "2025-01-28T16:14:34.513697Z",
     "iopub.status.idle": "2025-01-28T16:14:34.926989Z",
     "shell.execute_reply": "2025-01-28T16:14:34.925867Z"
    },
    "papermill": {
     "duration": 0.420352,
     "end_time": "2025-01-28T16:14:34.929085",
     "exception": false,
     "start_time": "2025-01-28T16:14:34.508733",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(random_state=42)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "96ca63e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:34.938569Z",
     "iopub.status.busy": "2025-01-28T16:14:34.938148Z",
     "iopub.status.idle": "2025-01-28T16:14:34.973575Z",
     "shell.execute_reply": "2025-01-28T16:14:34.972420Z"
    },
    "papermill": {
     "duration": 0.04232,
     "end_time": "2025-01-28T16:14:34.975753",
     "exception": false,
     "start_time": "2025-01-28T16:14:34.933433",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_pred = rf.predict(X_test)\n",
    "y_pred_proba = rf.predict_proba(X_test)[:, 1] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1e86624b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:34.985099Z",
     "iopub.status.busy": "2025-01-28T16:14:34.984675Z",
     "iopub.status.idle": "2025-01-28T16:14:35.005729Z",
     "shell.execute_reply": "2025-01-28T16:14:35.004111Z"
    },
    "papermill": {
     "duration": 0.028235,
     "end_time": "2025-01-28T16:14:35.007919",
     "exception": false,
     "start_time": "2025-01-28T16:14:34.979684",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "accuracy = accuracy_score(Y_test, y_pred)\n",
    "auc_score = roc_auc_score(Y_test, y_pred_proba)\n",
    "clf_report = classification_report(Y_test, y_pred, output_dict=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "09306dfa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:35.017647Z",
     "iopub.status.busy": "2025-01-28T16:14:35.017244Z",
     "iopub.status.idle": "2025-01-28T16:14:35.032446Z",
     "shell.execute_reply": "2025-01-28T16:14:35.031312Z"
    },
    "papermill": {
     "duration": 0.021732,
     "end_time": "2025-01-28T16:14:35.034291",
     "exception": false,
     "start_time": "2025-01-28T16:14:35.012559",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forest Evaluation Metrics:\n",
      "Accuracy: 0.9093\n",
      "AUC: 0.9602\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.88      0.92      0.90       165\n",
      "           1       0.93      0.90      0.92       199\n",
      "\n",
      "    accuracy                           0.91       364\n",
      "   macro avg       0.91      0.91      0.91       364\n",
      "weighted avg       0.91      0.91      0.91       364\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Random Forest Evaluation Metrics:\")\n",
    "print(f\"Accuracy: {accuracy:.4f}\")\n",
    "print(f\"AUC: {auc_score:.4f}\")\n",
    "print(f\"Classification Report:\\n{classification_report(Y_test, y_pred)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0db6535b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:35.043637Z",
     "iopub.status.busy": "2025-01-28T16:14:35.043239Z",
     "iopub.status.idle": "2025-01-28T16:14:35.050117Z",
     "shell.execute_reply": "2025-01-28T16:14:35.048864Z"
    },
    "papermill": {
     "duration": 0.014605,
     "end_time": "2025-01-28T16:14:35.052872",
     "exception": false,
     "start_time": "2025-01-28T16:14:35.038267",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "fpr, tpr, _ = roc_curve(Y_test, y_pred_proba)\n",
    "roc_auc = auc(fpr, tpr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "543d86b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-28T16:14:35.062825Z",
     "iopub.status.busy": "2025-01-28T16:14:35.062466Z",
     "iopub.status.idle": "2025-01-28T16:14:35.388718Z",
     "shell.execute_reply": "2025-01-28T16:14:35.387252Z"
    },
    "papermill": {
     "duration": 0.333891,
     "end_time": "2025-01-28T16:14:35.390820",
     "exception": false,
     "start_time": "2025-01-28T16:14:35.056929",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 6))\n",
    "plt.plot(fpr, tpr, color='blue', label=f'Random Forest (AUC = {roc_auc:.2f})')\n",
    "plt.plot([0, 1], [0, 1], color='gray', linestyle='--')\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
    "plt.legend(loc='lower right')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6547550,
     "sourceId": 10579989,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6563284,
     "sourceId": 10603000,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30839,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.461107,
   "end_time": "2025-01-28T16:14:36.219035",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-01-28T16:14:27.757928",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
